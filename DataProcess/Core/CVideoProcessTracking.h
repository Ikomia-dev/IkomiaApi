#ifndef CVIDEOPROCESSTRACKING_H
#define CVIDEOPROCESSTRACKING_H

#include "CVideoProcess.h"
#include "DataProcessGlobal.hpp"

/**
 * @ingroup groupDataProcess
 * @brief The CVideoProcessTracking class is derived from CVideoProcess and is dedicated to tracking task.
 * @details This class handles the graphics input to extract the region of interest to track. This region is limited to rectangle region.
 * It also generates the tracking results as a binary mask and a dedicated graphics layer.
 */
class DATAPROCESSSHARED_EXPORT CVideoProcessTracking : public CVideoProcess
{
    public:

        /**
         * @brief Default constructor.
         *  - Inputs: same as CImageProcess2d.
         *  - Outputs: binary mask, original image, graphics layer and measures.
         */
        CVideoProcessTracking();
        /**
         * @brief Constructs CVideoProcessTracking with the given name.
         *  - Inputs: same as CImageProcess2d.
         *  - Outputs: binary mask, original image, graphics layer and measures.
         */
        CVideoProcessTracking(const std::string& name);

        virtual ~CVideoProcessTracking() = default;

        /**
         * @brief Notifies the video has started. Update internal states.
         * @param frameCount: total number of frames.
         */
        void    notifyVideoStart(int frameCount) override;
        /**
         * @brief Notifies the end of the video is reached. Update internal states.
         */
        void    notifyVideoEnd() override;

        /**
         * @brief Extracts region of interest to track from graphics input.
         */
        void    setRoiToTrack();

        /**
         * @brief Fills all the outputs generated by tracking algorithm.
         *  - 0: binary mask of the tracked region.
         *  - 1: original image with tracked graphics item.
         *  - 2: graphics output (tracked item).
         *  - 3: tracked region coordinates.
         */
        void    manageOutputs();

    /** @cond INTERNAL */
    protected:

        cv::Rect2d                  m_trackedRect;
        bool                        m_bInitRoi = false;
        bool                        m_bVideoStarted = false;
    /** @endcond */
};

#endif // CVIDEOPROCESSTRACKING_H
